#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>

#include "button.h"
#include "framework.h"
#include "process_instructions.h"

typedef struct {
    int x1;
    int y1;
    int x2;
    int y2;
} line_t;

typedef struct {
    line_t line1;
    line_t line2;
} arrow_t;

// Rectangle
#define CIRCUIT_BORDER {.x = 0, .y = 0, .w = 960, .h = 540}
#define PC_RECT {.x = 30, .y = 120, .w = 30,.h = 90}
#define MUX1_RECT {.x = 90, .y = 150, .w = 30,.h = 90}
#define Mem_RECT {.x = 150, .y = 180, .w = 60,.h = 180}
#define IR_RECT {.x = 240, .y = 120, .w = 90,.h = 210}
#define MDR_RECT {.x = 240, .y = 390, .w = 90,.h = 60}
#define MUX2_RECT {.x = 390, .y = 330, .w = 45,.h = 90}
#define MUX3_RECT {.x = 420, .y = 225, .w = 30,.h = 75}
#define Registers_RECT {.x = 480, .y = 150, .w = 90,.h = 210}
#define A_RECT {.x = 600, .y = 180, .w = 30,.h = 45}
#define B_RECT {.x = 600, .y = 255, .w = 30,.h = 45}
#define CONST4_RECT {.x = 585, .y = 315, .w = 30,.h = 30}
#define MUX4_RECT {.x = 660, .y = 165, .w = 45,.h = 75}
#define MUX5_RECT {.x = 660, .y = 270, .w = 45,.h = 75}
#define SL2_RECT {.x = 690, .y = 75, .w = 60,.h = 60}
#define ALU_RECT {.x = 750, .y = 180, .w = 60,.h = 135}
#define ALUout_RECT {.x = 870, .y = 240, .w = 60,.h = 60}
#define MUX6_RECT {.x = 900, .y = 45, .w = 30,.h = 90}
#define FLAGS_RECT {.x = 780, .y = 30, .w = 60,.h = 15}

// Lines
static const line_t LINES[] = {
    {.x1 = 645, .y1 = 180, .x2 = 645, .y2 = 150},   // Line 00
    {.x1 = 15, .y1 = 15, .x2 = 15, .y2 = 150},      // Line 01
    {.x1 = 15, .y1 = 15, .x2 = 945, .y2 = 15},      // Line 02
    {.x1 = 75, .y1 = 105, .x2 = 645, .y2 = 105},    // Line 03
    {.x1 = 75, .y1 = 105, .x2 = 75, .y2 = 165},     // Line 04
    {.x1 = 60, .y1 = 165, .x2 = 75, .y2 = 165},     // Line 05
    {.x1 = 120, .y1 = 210, .x2 = 150, .y2 = 210},   // Line 06
    {.x1 = 60, .y1 = 225, .x2 = 90, .y2 = 225},     // Line 07
    {.x1 = 60, .y1 = 225, .x2 = 60, .y2 = 525},     // Line 08
    {.x1 = 210, .y1 = 240, .x2 = 225, .y2 = 240},   // Line 09
    {.x1 = 225, .y1 = 240, .x2 = 225, .y2 = 420},   // Line 10
    {.x1 = 120, .y1 = 300, .x2 = 150, .y2 = 300},   // Line 11
    {.x1 = 120, .y1 = 300, .x2 = 120, .y2 = 510},   // Line 12
    {.x1 = 360, .y1 = 120, .x2 = 690, .y2 = 120},   // Line 13
    {.x1 = 390, .y1 = 120, .x2 = 390, .y2 = 180},   // Line 14
    {.x1 = 375, .y1 = 120, .x2 = 375, .y2 = 210},   // Line 15
    {.x1 = 360, .y1 = 120, .x2 = 360, .y2 = 270},   // Line 16
    {.x1 = 480, .y1 = 180, .x2 = 390, .y2 = 180},   // Line 17
    {.x1 = 480, .y1 = 210, .x2 = 390, .y2 = 210},   // Line 18
    {.x1 = 390, .y1 = 210, .x2 = 390, .y2 = 240},   // Line 19
    {.x1 = 390, .y1 = 240, .x2 = 420, .y2 = 240},   // Line 20
    {.x1 = 330, .y1 = 270, .x2 = 360, .y2 = 270},   // Line 21
    {.x1 = 360, .y1 = 285, .x2 = 420, .y2 = 285},   // Line 22
    {.x1 = 450, .y1 = 270, .x2 = 480, .y2 = 270},   // Line 23
    {.x1 = 450, .y1 = 330, .x2 = 480, .y2 = 330},   // Line 24
    {.x1 = 450, .y1 = 330, .x2 = 450, .y2 = 360},   // Line 25
    {.x1 = 435, .y1 = 360, .x2 = 450, .y2 = 360},   // Line 26
    {.x1 = 375, .y1 = 360, .x2 = 390, .y2 = 360},   // Line 27
    {.x1 = 375, .y1 = 360, .x2 = 375, .y2 = 525},   // Line 28
    {.x1 = 330, .y1 = 405, .x2 = 390, .y2 = 405},   // Line 29
    {.x1 = 120, .y1 = 510, .x2 = 645, .y2 = 510},   // Line 30
    {.x1 = 375, .y1 = 525, .x2 = 945, .y2 = 525},   // Line 31
    {.x1 = 570, .y1 = 210, .x2 = 600, .y2 = 210},   // Line 32
    {.x1 = 570, .y1 = 270, .x2 = 600, .y2 = 270},   // Line 33
    {.x1 = 630, .y1 = 210, .x2 = 660, .y2 = 210},   // Line 34
    {.x1 = 630, .y1 = 285, .x2 = 645, .y2 = 285},   // Line 35
    {.x1 = 615, .y1 = 330, .x2 = 660, .y2 = 330},   // Line 36
    {.x1 = 645, .y1 = 285, .x2 = 645, .y2 = 510},   // Line 37
    {.x1 = 645, .y1 = 105, .x2 = 645, .y2 = 150},   // Line 38
    {.x1 = 645, .y1 = 150, .x2 = 810, .y2 = 150},   // Line 39
    {.x1 = 705, .y1 = 210, .x2 = 750, .y2 = 210},   // Line 40
    {.x1 = 705, .y1 = 285, .x2 = 750, .y2 = 285},   // Line 41
    {.x1 = 810, .y1 = 120, .x2 = 810, .y2 = 150},   // Line 42
    {.x1 = 825, .y1 = 210, .x2 = 825, .y2 = 45},    // Line 43
    {.x1 = 810, .y1 = 210, .x2 = 825, .y2 = 210},   // Line 44
    {.x1 = 810, .y1 = 270, .x2 = 840, .y2 = 270},   // Line 45
    {.x1 = 840, .y1 = 60, .x2 = 840, .y2 = 270},    // Line 46
    {.x1 = 840, .y1 = 60, .x2 = 900, .y2 = 60},     // Line 47
    {.x1 = 870, .y1 = 90, .x2 = 900, .y2 = 90},     // Line 48
    {.x1 = 870, .y1 = 90, .x2 = 870, .y2 = 150},    // Line 49
    {.x1 = 870, .y1 = 150, .x2 = 945, .y2 = 150},   // Line 50
    {.x1 = 930, .y1 = 90, .x2 = 945, .y2 = 90},     // Line 51
    {.x1 = 945, .y1 = 15, .x2 = 945, .y2 = 90},     // Line 52
    {.x1 = 945, .y1 = 150, .x2 = 945, .y2 = 270},   // Line 53
    {.x1 = 930, .y1 = 270, .x2 = 945, .y2 = 270},   // Line 54
    {.x1 = 645, .y1 = 180, .x2 = 660, .y2 = 180},   // Line 55
    {.x1 = 945, .y1 = 270, .x2 = 945, .y2 = 525},   // Line 56
    {.x1 = 15, .y1 = 150, .x2 = 30, .y2 = 150},     // Line 57
    {.x1 = 225, .y1 = 420, .x2 = 240, .y2 = 420},   // Line 58
    {.x1 = 750, .y1 = 120, .x2 = 900, .y2 = 120},   // Line 59
    {.x1 = 375, .y1 = 525, .x2 = 60, .y2 = 525},    // Line 60
    {.x1 = 90, .y1 = 165, .x2 = 75, .y2 = 165},     // Line 61
    {.x1 = 240, .y1 = 240, .x2 = 225, .y2 = 240},   // Line 62
    {.x1 = 330, .y1 = 180, .x2 = 390, .y2 = 180},   // Line 63
    {.x1 = 330, .y1 = 210, .x2 = 375, .y2 = 210},   // Line 64
    {.x1 = 375, .y1 = 210, .x2 = 390, .y2 = 210},   // Line 65
    {.x1 = 360, .y1 = 285, .x2 = 360, .y2 = 270},   // Line 66
    {.x1 = 660, .y1 = 285, .x2 = 645, .y2 = 285},   // Line 67
    {.x1 = 870, .y1 = 270, .x2 = 840, .y2 = 270},   // Line 68
    {.x1 = 360, .y1 = 285, .x2 = 360, .y2 = 450},   // Line 69
    {.x1 = 360, .y1 = 450, .x2 = 630, .y2 = 450},   // Line 70
    {.x1 = 630, .y1 = 450, .x2 = 630, .y2 = 315},   // Line 71
    {.x1 = 630, .y1 = 315, .x2 = 660, .y2 = 315},   // Line 72 
};

// Arrows
static const arrow_t ARROWS[] = {
    {{.x1 = 785, .y1 = 38, .x2 = 780, .y2 = 33}, 
    {.x1 = 785, .y1 = 38, .x2 = 780, .y2 = 43}}, // arrow00
    {{.x1 = 25, .y1 = 145, .x2 = 30, .y2 = 150}, 
    {.x1 = 25, .y1 = 155, .x2 = 30, .y2 = 150}}, // arrow01
    {{.x1 = 45, .y1 = 125, .x2 = 40, .y2 = 120}, 
    {.x1 = 45, .y1 = 125, .x2 = 50, .y2 = 120}}, // arrow02
    {{.x1 = 85, .y1 = 160, .x2 = 90, .y2 = 165}, 
    {.x1 = 85, .y1 = 170, .x2 = 90, .y2 = 165}}, // arrow03
    {{.x1 = 85, .y1 = 220, .x2 = 90, .y2 = 225}, 
    {.x1 = 85, .y1 = 230, .x2 = 90, .y2 = 225}}, // arrow04
    {{.x1 = 105, .y1 = 155, .x2 = 100, .y2 = 150}, 
    {.x1 = 105, .y1 = 155, .x2 = 110, .y2 = 150}}, // arrow05
    {{.x1 = 145, .y1 = 205, .x2 = 150, .y2 = 210}, 
    {.x1 = 145, .y1 = 215, .x2 = 150, .y2 = 210}}, // arrow06
    {{.x1 = 145, .y1 = 295, .x2 = 150, .y2 = 300}, 
    {.x1 = 145, .y1 = 305, .x2 = 150, .y2 = 300}}, // arrow07
    {{.x1 = 165, .y1 = 185, .x2 = 160, .y2 = 180}, 
    {.x1 = 165, .y1 = 185, .x2 = 170, .y2 = 180}}, // arrow08
    {{.x1 = 195, .y1 = 185, .x2 = 190, .y2 = 180}, 
    {.x1 = 195, .y1 = 185, .x2 = 200, .y2 = 180}}, // arrow09
    {{.x1 = 235, .y1 = 235, .x2 = 240, .y2 = 240}, 
    {.x1 = 235, .y1 = 245, .x2 = 240, .y2 = 240}}, // arrow10
    {{.x1 = 235, .y1 = 415, .x2 = 240, .y2 = 420}, 
    {.x1 = 235, .y1 = 425, .x2 = 240, .y2 = 420}}, // arrow11
    {{.x1 = 285, .y1 = 125, .x2 = 280, .y2 = 120}, 
    {.x1 = 285, .y1 = 125, .x2 = 290, .y2 = 120}}, // arrow12
    {{.x1 = 415, .y1 = 235, .x2 = 420, .y2 = 240}, 
    {.x1 = 415, .y1 = 245, .x2 = 420, .y2 = 240}}, // arrow13
    {{.x1 = 415, .y1 = 280, .x2 = 420, .y2 = 285}, 
    {.x1 = 415, .y1 = 290, .x2 = 420, .y2 = 285}}, // arrow14
    {{.x1 = 385, .y1 = 355, .x2 = 390, .y2 = 360}, 
    {.x1 = 385, .y1 = 365, .x2 = 390, .y2 = 360}}, // arrow15
    {{.x1 = 385, .y1 = 400, .x2 = 390, .y2 = 405}, 
    {.x1 = 385, .y1 = 410, .x2 = 390, .y2 = 405}}, // arrow16
    {{.x1 = 435, .y1 = 230, .x2 = 430, .y2 = 225}, 
    {.x1 = 435, .y1 = 230, .x2 = 440, .y2 = 225}}, // arrow17
    {{.x1 = 413, .y1 = 415, .x2 = 408, .y2 = 420}, 
    {.x1 = 413, .y1 = 415, .x2 = 418, .y2 = 420}}, // arrow18
    {{.x1 = 475, .y1 = 175, .x2 = 480, .y2 = 180}, 
    {.x1 = 475, .y1 = 185, .x2 = 480, .y2 = 180}}, // arrow19
    {{.x1 = 475, .y1 = 205, .x2 = 480, .y2 = 210}, 
    {.x1 = 475, .y1 = 215, .x2 = 480, .y2 = 210}}, // arrow20
    {{.x1 = 475, .y1 = 265, .x2 = 480, .y2 = 270}, 
    {.x1 = 475, .y1 = 275, .x2 = 480, .y2 = 270}}, // arrow21
    {{.x1 = 475, .y1 = 325, .x2 = 480, .y2 = 330}, 
    {.x1 = 475, .y1 = 335, .x2 = 480, .y2 = 330}}, // arrow22
    {{.x1 = 525, .y1 = 155, .x2 = 520, .y2 = 150}, 
    {.x1 = 525, .y1 = 155, .x2 = 530, .y2 = 150}}, // arrow23
    {{.x1 = 595, .y1 = 205, .x2 = 600, .y2 = 210}, 
    {.x1 = 595, .y1 = 215, .x2 = 600, .y2 = 210}}, // arrow24
    {{.x1 = 595, .y1 = 265, .x2 = 600, .y2 = 270}, 
    {.x1 = 595, .y1 = 275, .x2 = 600, .y2 = 270}}, // arrow25
    {{.x1 = 685, .y1 = 115, .x2 = 690, .y2 = 120}, 
    {.x1 = 685, .y1 = 125, .x2 = 690, .y2 = 120}}, // arrow26
    {{.x1 = 655, .y1 = 175, .x2 = 660, .y2 = 180}, 
    {.x1 = 655, .y1 = 185, .x2 = 660, .y2 = 180}}, // arrow27
    {{.x1 = 655, .y1 = 205, .x2 = 660, .y2 = 210}, 
    {.x1 = 655, .y1 = 215, .x2 = 660, .y2 = 210}}, // arrow28
    {{.x1 = 655, .y1 = 280, .x2 = 660, .y2 = 285}, 
    {.x1 = 655, .y1 = 290, .x2 = 660, .y2 = 285}}, // arrow29
    {{.x1 = 655, .y1 = 325, .x2 = 660, .y2 = 330}, 
    {.x1 = 655, .y1 = 335, .x2 = 660, .y2 = 330}}, // arrow30
    {{.x1 = 683, .y1 = 170, .x2 = 678, .y2 = 165}, 
    {.x1 = 683, .y1 = 170, .x2 = 688, .y2 = 165}}, // arrow31
    {{.x1 = 683, .y1 = 340, .x2 = 678, .y2 = 345}, 
    {.x1 = 683, .y1 = 340, .x2 = 688, .y2 = 345}}, // arrow32
    {{.x1 = 745, .y1 = 205, .x2 = 750, .y2 = 210}, 
    {.x1 = 745, .y1 = 215, .x2 = 750, .y2 = 210}}, // arrow33
    {{.x1 = 745, .y1 = 280, .x2 = 750, .y2 = 285}, 
    {.x1 = 745, .y1 = 290, .x2 = 750, .y2 = 285}}, // arrow34
    {{.x1 = 805, .y1 = 125, .x2 = 810, .y2 = 120}, 
    {.x1 = 815, .y1 = 125, .x2 = 810, .y2 = 120}}, // arrow35
    {{.x1 = 820, .y1 = 50, .x2 = 825, .y2 = 45}, 
    {.x1 = 830, .y1 = 50, .x2 = 825, .y2 = 45}}, // arrow36
    {{.x1 = 895, .y1 = 55, .x2 = 900, .y2 = 60}, 
    {.x1 = 895, .y1 = 65, .x2 = 900, .y2 = 60}}, // arrow37
    {{.x1 = 895, .y1 = 85, .x2 = 900, .y2 = 90}, 
    {.x1 = 895, .y1 = 95, .x2 = 900, .y2 = 90}}, // arrow38
    {{.x1 = 895, .y1 = 115, .x2 = 900, .y2 = 120}, 
    {.x1 = 895, .y1 = 125, .x2 = 900, .y2 = 120}}, // arrow39
    {{.x1 = 865, .y1 = 265, .x2 = 870, .y2 = 270}, 
    {.x1 = 865, .y1 = 275, .x2 = 870, .y2 = 270}}, // arrow40
    {{.x1 = 915, .y1 = 50, .x2 = 910, .y2 = 45}, 
    {.x1 = 915, .y1 = 50, .x2 = 920, .y2 = 45}}, // arrow41
    {{.x1 = 780, .y1 = 310, .x2 = 775, .y2 = 315}, 
    {.x1 = 780, .y1 = 310, .x2 = 785, .y2 = 315}}, // arrow42
    {{.x1 = 660, .y1 = 315, .x2 = 655, .y2 = 310}, 
    {.x1 = 660, .y1 = 315, .x2 = 655, .y2 = 320}}, // arrow43
};

// Dots (squares)
#define DOTS_SIZE 14

static const SDL_Rect DOTS[] = {
    {.x = 358, .y = 283, .w = 5, .h = 5}, // dot00
    {.x = 73, .y = 163, .w = 5, .h = 5},  // dot01
    {.x = 373, .y = 118, .w = 5, .h = 5}, // dot02
    {.x = 388, .y = 118, .w = 5, .h = 5}, // dot03
    {.x = 223, .y = 238, .w = 5, .h = 5}, // dot04
    {.x = 388, .y = 178, .w = 5, .h = 5}, // dot05
    {.x = 388, .y = 208, .w = 5, .h = 5}, // dot06
    {.x = 373, .y = 208, .w = 5, .h = 5}, // dot07
    {.x = 358, .y = 268, .w = 5, .h = 5}, // dot08
    {.x = 373, .y = 523, .w = 5, .h = 5}, // dot09
    {.x = 643, .y = 283, .w = 5, .h = 5}, // dot10
    {.x = 643, .y = 148, .w = 5, .h = 5}, // dot11
    {.x = 838, .y = 268, .w = 5, .h = 5}, // dot12
    {.x = 943, .y = 268, .w = 5, .h = 5}, // dot13
};

#define BLACK (SDL_Color){0, 0, 0, SDL_ALPHA_OPAQUE}

SDL_Rect centeredBox(SDL_Rect rect, SDL_Surface *box);

void init_draw(SDL_Window *window);

void put_text(char *output_text);

void put_state(circuit_state_t *state);

void draw_text(void);

void draw_register_values(void);

void draw_memory_values(SDL_Window *memory_window);

void draw_circuit_graph(circuit_state_t state);

void draw_arrow(arrow_t arrow);

void draw_button(button_t *button);

void draw_main_components(void);

void render_everything(void);